//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from grammars/BrainfuckOptimized.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IBrainfuckOptimizedListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class BrainfuckOptimizedBaseListener : IBrainfuckOptimizedListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.analyze"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnalyze([NotNull] BrainfuckOptimizedParser.AnalyzeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.analyze"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnalyze([NotNull] BrainfuckOptimizedParser.AnalyzeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] BrainfuckOptimizedParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] BrainfuckOptimizedParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.next"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNext([NotNull] BrainfuckOptimizedParser.NextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.next"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNext([NotNull] BrainfuckOptimizedParser.NextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.prev"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrev([NotNull] BrainfuckOptimizedParser.PrevContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.prev"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrev([NotNull] BrainfuckOptimizedParser.PrevContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.add"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd([NotNull] BrainfuckOptimizedParser.AddContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.add"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd([NotNull] BrainfuckOptimizedParser.AddContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.sub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSub([NotNull] BrainfuckOptimizedParser.SubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.sub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSub([NotNull] BrainfuckOptimizedParser.SubContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint([NotNull] BrainfuckOptimizedParser.PrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint([NotNull] BrainfuckOptimizedParser.PrintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.read"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRead([NotNull] BrainfuckOptimizedParser.ReadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.read"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRead([NotNull] BrainfuckOptimizedParser.ReadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.sloop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSloop([NotNull] BrainfuckOptimizedParser.SloopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.sloop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSloop([NotNull] BrainfuckOptimizedParser.SloopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.eloop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEloop([NotNull] BrainfuckOptimizedParser.EloopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.eloop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEloop([NotNull] BrainfuckOptimizedParser.EloopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.reset_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReset_value([NotNull] BrainfuckOptimizedParser.Reset_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.reset_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReset_value([NotNull] BrainfuckOptimizedParser.Reset_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoop([NotNull] BrainfuckOptimizedParser.LoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoop([NotNull] BrainfuckOptimizedParser.LoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.seq_inc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSeq_inc([NotNull] BrainfuckOptimizedParser.Seq_incContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.seq_inc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSeq_inc([NotNull] BrainfuckOptimizedParser.Seq_incContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckOptimizedParser.seq_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSeq_dec([NotNull] BrainfuckOptimizedParser.Seq_decContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckOptimizedParser.seq_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSeq_dec([NotNull] BrainfuckOptimizedParser.Seq_decContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
