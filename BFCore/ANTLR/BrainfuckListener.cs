//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from grammars/Brainfuck.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="BrainfuckParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public interface IBrainfuckListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckParser.analyze"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnalyze([NotNull] BrainfuckParser.AnalyzeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckParser.analyze"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnalyze([NotNull] BrainfuckParser.AnalyzeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] BrainfuckParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] BrainfuckParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckParser.next"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNext([NotNull] BrainfuckParser.NextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckParser.next"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNext([NotNull] BrainfuckParser.NextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckParser.prev"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrev([NotNull] BrainfuckParser.PrevContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckParser.prev"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrev([NotNull] BrainfuckParser.PrevContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckParser.add"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd([NotNull] BrainfuckParser.AddContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckParser.add"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd([NotNull] BrainfuckParser.AddContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckParser.sub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSub([NotNull] BrainfuckParser.SubContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckParser.sub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSub([NotNull] BrainfuckParser.SubContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint([NotNull] BrainfuckParser.PrintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint([NotNull] BrainfuckParser.PrintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckParser.read"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRead([NotNull] BrainfuckParser.ReadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckParser.read"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRead([NotNull] BrainfuckParser.ReadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BrainfuckParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop([NotNull] BrainfuckParser.LoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BrainfuckParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop([NotNull] BrainfuckParser.LoopContext context);
}
